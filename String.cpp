//****************************************************************************
//
//
//
//****************************************************************************


 
 
// ===========================================================================
//                                   Libraries
// ===========================================================================



// ===========================================================================
//                                 Project Files
// ===========================================================================
#include "String.h"




//############################################################################
//                                                                           #
//                                 Class String                              #
//                                                                           #
//############################################################################

// ===========================================================================
//                         Definition of static attributes
// ===========================================================================

// ===========================================================================
//                                  Constructors
// ===========================================================================

// Constructor used to initialize a string test
String::String(void)
{
  s_capacity=12;
  s_length=6;
  char* s_data = new char[s_capacity];
  for (int i=0; i<=s_length;i+=3)
    {
			s_data[i]='c';
			s_data[i+1]='o';
			s_data[i+2]='u';
    }
}

// ===========================================================================
//                                  Destructor
// ===========================================================================
String::~String(void)
{
    delete [] s_data;
    
}

// ===========================================================================
//                                 Public Methods
// ===========================================================================
 bool String::empty(void) const
 {
  return (s_length==0);
 }


// ===========================================================================
//                                Protected Methods
// ===========================================================================
 


// ===========================================================================
//                               Non inline accessors
// ===========================================================================
